apiVersion: v1
kind: Service
metadata:
  name: dgraph-test
  namespace: document-cache
  labels:
    app: dgraph-test
spec:
  type: ClusterIP
  ports:
  - port: 5080
    targetPort: 5080
    name: grpc-zero
  - port: 6080
    targetPort: 6080
    name: http-zero
  - port: 8080
    targetPort: 8080
    name: http-alpha
  - port: 9080
    targetPort: 9080
    name: grpc-alpha
  - port: 8000
    targetPort: 8000
    name: http-ratel
  selector:
    app: dgraph-test
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: dgraph-test
  namespace: document-cache
spec:
  serviceName: dgraph-test
  replicas: 1
  selector:
      matchLabels:
        app: dgraph-test
  template:
    metadata:
      labels:
        app: dgraph-test
    spec:
      containers:
      - name: ratel
        image: dgraph/dgraph:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8000
          name: http-ratel
        command:
          - dgraph-ratel
      - name: zero
        image: dgraph/dgraph:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5080
          name: grpc-zero
        - containerPort: 6080
          name: http-zero
        volumeMounts:
        - name: datadir
          mountPath: /dgraph
        command:
          - bash
          - "-c"
          - |
            set -ex
            dgraph zero --my=$(hostname -f):5080
      - name: alpha
        image: dgraph/dgraph:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
          name: http-alpha
        - containerPort: 9080
          name: grpc-alpha
        volumeMounts:
        - name: datadir
          mountPath: /dgraph
        env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
        command:
          - bash
          - "-c"
          - |
            set -ex
            dgraph alpha --whitelist 10.0.0.0/8 --my=$(hostname -f):7080 --zero dgraph-test:5080
      terminationGracePeriodSeconds: 60
      volumes:
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      name: datadir
      annotations:
        volume.alpha.kubernetes.io/storage-class: anything
    spec:
      accessModes:
        - "ReadWriteOnce"
      resources:
        requests:
          storage: 5Gi
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: dgraph-ingress-alpha-test
  namespace: document-cache
  annotations:
    kubernetes.io/ingress.class: "nginx"    
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - alpha-test.tekit.io
    secretName: dgraph-alpha-test-tekit-com-tls
  rules:
  - host: alpha-test.tekit.io
    http:
      paths:
      - backend:
          serviceName: dgraph-test
          servicePort: 8080
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: dgraph-ingress-ratel-test
  namespace: document-cache
  annotations:
    kubernetes.io/ingress.class: "nginx"    
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - ratel-test.tekit.io
    secretName: dgraph-ratel-test-tekit-com-tls
  rules:
  - host: ratel-test.tekit.io
    http:
      paths:
      - backend:
          serviceName: dgraph-test
          servicePort: 8000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: docache-go
  namespace: document-cache
spec:
  selector:
    matchLabels:
      app: docache-go
  replicas: 1
  template:
    metadata:
      labels:
        app: docache-go
    spec:
      containers:
      - name: docache-go
        image: sebastianmontero/hypha-doc-cache-go-testnet:7b55198015077484169707f5f36fb58b0a60f269
        imagePullPolicy: IfNotPresent
        command: ["/usr/local/go/bin/go"]
        args: ["run", "."]
        # resources:
        #   limits:
        #     memory: "128Mi"
        #     cpu: "500m"
        env:
          - name: CONTRACT_NAME
            value: "dao.hypha"
          - name: DOC_TABLE_NAME
            value: "documents"
          - name: EDGE_TABLE_NAME
            value: "edges"
          - name: FIREHOSE_ENDPOINT
            value: "firehose-telos-testnet.dfuse.svc.cluster.local:9000"
          - name: EOS_ENDPOINT
            value: "https://testnet.telos.caleos.io"
          - name: START_BLOCK
            value: "86748390"
          - name: DGRAPH_ALPHA_HOST
            value: "dgraph-test.document-cache.svc.cluster.local"
          - name: DGRAPH_ALPHA_EXTERNAL_PORT
            value: "9080"
        envFrom:
          - secretRef:
             name: doccache-secrets