apiVersion: v1
kind: Secret
metadata:
  name: doccache-secrets
  namespace: document-cache
type: Opaque
stringData:
  DFUSE_API_KEY: server_eeb2882943ae420bfb3eb9bf3d78ed9d
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: docache-go
  namespace: document-cache
spec:
  selector:
    matchLabels:
      app: docache-go
  replicas: 1
  template:
    metadata:
      labels:
        app: docache-go
    spec:
      containers:
      - name: docache-go
        image: sebastianmontero/hypha-doc-cache-go-testnet:7b55198015077484169707f5f36fb58b0a60f269
        imagePullPolicy: IfNotPresent
        command: ["/usr/local/go/bin/go"]
        args: ["run", "."]
        # resources:
        #   limits:
        #     memory: "128Mi"
        #     cpu: "500m"
        env:
          - name: CONTRACT_NAME
            value: "dao.hypha"
          - name: DOC_TABLE_NAME
            value: "documents"
          - name: EDGE_TABLE_NAME
            value: "edges"
          - name: FIREHOSE_ENDPOINT
            value: "firehose-telos-testnet.dfuse.svc.cluster.local:9000"
          - name: EOS_ENDPOINT
            value: "https://testnet.telos.caleos.io"
          - name: START_BLOCK
            value: "100437489"
          - name: DGRAPH_ALPHA_HOST
            value: "dgraph-test.document-cache.svc.cluster.local"
          - name: DGRAPH_ALPHA_EXTERNAL_PORT
            value: "9080"
        envFrom:
          - secretRef:
             name: doccache-secrets
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: dho-prometheus
# spec:
#   selector:
#     app: dho-prometheus
#   type: ClusterIP
#   ports:
#   - port: 9090
#     targetPort: 9090
#     protocol: TCP
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: dho-prometheus
# spec:
#   selector:
#     app: dho-prometheus
#   type: NodePort
#   ports:
#   - port: 9090
#     targetPort: 9090
    # protocol: TCP
# ---
# apiVersion: networking.k8s.io/v1beta1
# kind: Ingress
# metadata:
#   name: dho-prometheus-ingress
#   annotations:
#     kubernetes.io/ingress.class: nginx
#     cert-manager.io/cluster-issuer: letsencrypt-prod
# spec:
#   tls:
#   - hosts:
#     - dho-prometheus.tekit.io
#     secretName: dho-prometheus-tekit-tls
#   rules:
#   - host: dho-prometheus.tekit.io
#     http:
#       paths:
#       - backend:
#           serviceName: dho-prometheus
#           servicePort: 80
