apiVersion: v1
kind: ConfigMap
metadata:
  name: dho-prometheus-config
data:
  prometheus.yml: |
    scrape_configs:
    - job_name: "dgraph"
      metrics_path: "/debug/prometheus_metrics"
      scrape_interval: "2s"
      static_configs:
      - targets:
        - 3.232.158.110:6081     # For Dgraph zero, 6080 is the http endpoint exposing metrics.
        - 3.232.158.110:8081    # For Dgraph alpha, 8080 is the http endpoint exposing metrics.
    - job_name: "docCache"
      metrics_path: "/metrics"
      scrape_interval: "2s"
      static_configs:
      - targets:
        - 3.232.158.110:9091     # For Dgraph zero, 6080 is the http endpoint exposing metrics.
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dho-prometheus
spec:
  selector:
    matchLabels:
      app: dho-prometheus
  replicas: 1
  template:
    metadata:
      labels:
        app: dho-prometheus
    spec:
      containers:
      - name: dho-prometheus
        image: prom/prometheus
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
        ports:
         - containerPort: 9090
           name: default
        volumeMounts:
        - name: config-volume
          mountPath: /etc/prometheus
      volumes:
        - name: config-volume
          configMap:
            name: dho-prometheus-config
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: dho-prometheus
# spec:
#   selector:
#     app: dho-prometheus
#   type: ClusterIP
#   ports:
#   - port: 9090
#     targetPort: 9090
#     protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: dho-prometheus
spec:
  selector:
    app: dho-prometheus
  type: NodePort
  ports:
  - port: 9090
    targetPort: 9090
    protocol: TCP
# ---
# apiVersion: networking.k8s.io/v1beta1
# kind: Ingress
# metadata:
#   name: dho-prometheus-ingress
#   annotations:
#     kubernetes.io/ingress.class: nginx
#     cert-manager.io/cluster-issuer: letsencrypt-prod
# spec:
#   tls:
#   - hosts:
#     - dho-prometheus.tekit.io
#     secretName: dho-prometheus-tekit-tls
#   rules:
#   - host: dho-prometheus.tekit.io
#     http:
#       paths:
#       - backend:
#           serviceName: dho-prometheus
#           servicePort: 80
